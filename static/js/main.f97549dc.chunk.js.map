{"version":3,"sources":["APIs/MyJsonAPI.js","APIs/GoogleMapsAPI.js","components/Filter.js","components/ListItem.js","components/List.js","components/ErrorBoundary.js","components/Map.js","components/ResponsiveDrawer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","url","id","key","client","center","lat","lng","Filter","handleChange","e","_this","setState","filterInput","target","value","markers","props","jobs","map","job","isMatched","company","toLowerCase","includes","marker","find","isVisible","liftState","_this2","this","react_default","a","createElement","noValidate","autoComplete","onSubmit","preventDefault","InputBase_default","placeholder","aria-label","style","width","height","margin","backgroundColor","color","fontSize","justifyContent","onChange","Component","ListItem","x","addressArray","address","split","Card_default","cursor","borderRadius","marginLeft","tabIndex","onKeyPress","charCode","handleMarkerClick","CardActions_default","CardContent_default","onClick","Typography_default","variant","position","component","phone","jobCard","List","listItem","ListItem_ListItem","Object","assign","handleFilterJobs","length","filter","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","handleError","children","s","mapStyle","elementType","stylers","featureType","visibility","MyMapComponent","withScriptjs","withGoogleMap","lib","options","styles","scrollwheel","mapTypeControl","fullscreenControl","streetViewControl","handleMapClick","defaultZoom","zoom","defaultCenter","index","animation","selected","isOpen","src","photo","alt","rel","href","website","Map","window","gm_authFailure","ErrorBoundary_ErrorBoundary","isMarkerShown","loadingElement","containerElement","mapElement","ResponsiveDrawer","handleDrawerToggle","mobileOpen","_this$props","classes","theme","drawer","className","toolbar","Filter_Filter","Divider_default","List_List","root","AppBar_default","appBar","Toolbar_default","IconButton_default","navIconHide","Menu_default","title","noWrap","align","Hidden_default","mdUp","SwipeableDrawer_default","minFlingVelocity","anchor","direction","open","onOpen","onClose","paper","drawerPaper","ModalProps","keepMounted","smDown","implementation","Drawer_default","overflow","content","Map_Map","withStyles","flexGrow","zIndex","display","defineProperty","breakpoints","up","concat","mixins","padding","spacing","unit","textAlign","withTheme","APIs","gMaps","params","URLSearchParams","gMapsAPI","myJson","myJsonAPI","createMuiTheme","typography","useNextVariants","suppressDeprecationWarnings","App","info","errorString","toString","console","toast","fontWeight","role","handleOffline","online","warning","handleOnline","success","handleCached","cached","closeAllMarkers","latlng","setTimeout","o","googleMapURL","axios","then","res","data","catch","addEventListener","core_styles","components_ResponsiveDrawer","handleFilterChange","react_toastify_lib","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","App_App","document","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f97549dc.chunk.js","sourcesContent":["const url = 'https://api.myjson.com/bins/'\nconst id = '10q460'\n\nmodule.exports = {\n\turl, id\n}\n","/*\nThe Google Maps API for this project is currently set up to use a borrowed\nclient ID instead of a key. To use an API key instead, do the following:\n1) Follow instructions inside `const APIs` in App.js if you haven't already.\n2) Paste your API key inside the quotes as instructed below.\n3) Save your changes and refresh.\n*/\n\nconst key = \"PASTE_YOUR_API_KEY_HERE\"\n\nconst url = 'https://maps.googleapis.com/maps/api/js?'\nconst client = 'gme-nianticinc'\nconst center = {lat: 41.623069, lng: -93.698223}\nmodule.exports = {\n\tkey, url, client, center\n}\n","// This component is based on the Text Fields demo code at:\n// https://material-ui.com/demos/text-fields/#customized-inputs\n\nimport React, { Component } from 'react'\nimport InputBase from '@material-ui/core/InputBase'\n\n// The Filter Class Component\nexport default class Filter extends Component {\n\n    // Function to handle when user input changes the text that is in the\n    // input field. We do this every time a character is added or removed\n    // from the field, so we don't need a submit button. When the user is\n    // finished typing their query, they simply stop typing, and the\n    // results are already right there.\n    handleChange = (e) => {\n        // set filterInput state to current contents of the text field\n        this.setState({filterInput: e.target.value})\n        // map through all the job listings in props\n        const markers = this.props.jobs.map(job => {\n            // evaluate whether a match has been found\n            const isMatched = job.company.toLowerCase()\n                .includes(e.target.value.toLowerCase())\n            // find the map marker for the currently selected job listing\n            const marker = this.props.markers\n                .find(marker => marker.id === job.id)\n                // if isMatched is truthy\n                if(isMatched) {\n                    // make the marker visible\n                    marker.isVisible = true\n                }else{\n                    // otherwise, make it invisible\n                    marker.isVisible = false\n                }\n                // return the marker, visible or not.\n                return marker\n        })\n        // lift the updated markers state up to App\n        // so they can propagate to other components\n        this.props.liftState({markers})\n        this.props.liftState({filterInput: e.target.value})\n    }\n\n    render() {\n\n        return (\n            <form\n                noValidate\n                autoComplete=\"off\"\n                // If user presses the Enter key after they\n                // finish typing their query, ignore it, so\n                // that it doesn't interfere with the rest\n                // of the app.\n                onSubmit={e => { e.preventDefault(); }}\n            >\n                <InputBase\n                    placeholder=\"filter by business name\"\n                    aria-label=\"filter by business name\"\n                    style={{\n                        width: '90%',\n                        height: '100%',\n                        margin: '6px 8px 0 8px',\n                        backgroundColor: 'rgb(149, 184, 175)',\n                        color: 'rgb(21, 28, 42)',\n                        fontSize: '20px',\n                        justifyContent: 'center'\n                    }}\n                    // This input field's value is actually set by\n                    // React. It's what's called a Controlled Component.\n                    value={this.props.filterInput}\n                    // when the user changes a character in the field,\n                    // send the typed text as a string to handleChange\n                    onChange={(e) => this.handleChange(e)}\n                />\n            </form>\n        )\n    }\n}\n","// This component is based on the Card Component demo code at:\n// https://material-ui.com/demos/cards/#simple-card\n\nimport React, {Component} from 'react'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\n\n// the ListItem Class Component\nexport default class ListItem extends Component {\n\n    render() {\n\n        // Split input into comma-delimited array\n        const split = s => {\n            return (s.split(','))\n        }\n\n        // jobCard is a function that will build a unique Card component\n        // based on the data that is fed into it, referred to here as 'x'.\n        const jobCard = x => {\n\n            // handleEnterKey takes one argument as input, determines if\n            // that input was keycode 13 (the Enter or Return key),\n            // and if so, it borrows the handleMarkerClick function from\n            // the App component in order to send the job id value of\n            // the currently selected component all the way up to App.\n            // Once there, handleMarkerClick uses the job id to locate the\n            // map marker that goes with the currently selected job listing,\n            // and changes its isOpen state to true, which in turn causes\n            // the Map component to re-render with the selected job's marker\n            // open and displaying its InfoWindow.\n            const handleEnterKey = (key) => {\n                if(key.charCode === 13) {\n                    this.props.handleMarkerClick(this.props.markers[x.id])\n                }\n            }\n\n            // use split() to break job address into a comma-delimited array\n            const addressArray = split(x.address)\n\n            return (\n                // Render one instance of the Card component, using the 'x'\n                // value from earlier to provide each instance with a single\n                // job listing, including the company name, address, phone #,\n                // job title, and website.\n                <Card\n                    style={{\n                        cursor: 'pointer',\n                        backgroundColor: 'rgb(149, 184, 175)',\n                        borderRadius: '15px',\n                        width: '95%',\n                        marginLeft: '8px'\n                    }}\n                    // tabIndex=0 forces the browser to add this component\n                    // to the tab order, for a11y reasons.\n                    tabIndex={0}\n                    // If the user presses a key while this component is\n                    // selected, it gets sent to handleEnterKey and handled.\n                    onKeyPress={handleEnterKey}\n                    >\n                    <CardActions\n                        style={{width:'100%'}}\n                        >\n                        <CardContent\n                            style={{\n                                width:'100%',\n                                color: 'rgb(21, 28, 42)'\n                            }}\n                            // when user clicks this component, also send\n                            // a click to its matching map marker\n                            onClick={() => this.props.handleMarkerClick(\n                                this.props.markers[x.id]\n                        )}>\n                            <Typography variant='title'>\n                                <span>{x.company}</span>\n                            </Typography>\n                            <Typography variant='subtitle1'>\n                                <span>\n                                    {x.position}\n                                </span>\n                            </Typography>\n                            <Typography component=\"p\">\n\n                                <span>\n                                    {/* Using addressArray, display job address\n                                    with a line break after the first comma */}\n                                    {addressArray[0]}\n                                    <br/>\n                                    {addressArray[1]},{addressArray[2]}\n                                </span>\n                                <br />\n\n                                <span>{x.phone}</span>\n                            </Typography>\n                        </CardContent>\n                    </CardActions>\n                </Card>\n            )\n        }\n        // return a single div for each instance, and add a\n        // line break after each one. \n        return (<div>{jobCard(this.props.job)}<br /></div>)\n    }\n\n}\n","// This component is based on the List demo code at:\n// https://material-ui.com/demos/lists/#lists\n\nimport React, {Component} from 'react'\nimport ListItem from './ListItem'\n\n// The List Class Component\nexport default class List extends Component {\n\n    // listItem function takes a single job object as its argument,\n    // and returns JSX code to build a container component that will\n    // wrap around the job listing details in the app sidebar.\n    listItem = (job) => {\n        return(\n            <ListItem\n                {...this.props}\n                key={job.id}\n                job={job}\n            />\n        )\n    }\n\n    // A function to handle when the user types text into the input field.\n    // This one takes no arguments. All it's doing is watching to see if the\n    // character length is NOT zero.\n    handleFilterJobs = () => {\n        // If so, it searches the job listings for any that match the\n        // string that is currently typed into the input field...\n        if (this.props.filterInput.length !== 0) {\n            const jobs = this.props.jobs.filter(job => job.company\n                .toLowerCase()\n                .includes(this.props.filterInput.toLowerCase()))\n            // ...then returns all listings that match that criterion.\n            return jobs.map(job => (\n                this.listItem(job)\n            ))\n        } else {\n            // If the input sring length IS zero, then that means the user\n            // has either not typed anything, or has deleted their query,\n            // so we just return the full list of jobs.\n            return this.props.jobs.map(job => (\n                this.listItem(job)\n            ))\n        }\n    }\n\n    render() {\n        return (\n            // Use handleFilterJobs to render the full list of jobs\n            // that match the filter. \n            <div>{this.handleFilterJobs()}</div>\n        )\n    }\n\n}\n","// This component is based on the ErrorBoundary example code in the\n// React documentation: https://reactjs.org/docs/error-boundaries.html\n\nimport {Component} from 'react'\n\nexport default class ErrorBoundary extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {hasError: false}\n    }\n\n    componentDidCatch(error) {\n        // Display fallback UI\n        this.setState({hasError: true})\n        this.props.handleError(\n            error,\n            `Google Maps failed to load.\n            See the JavaScript console for details.`)\n    }\n\n    render() {\n        if (!this.state.hasError) {\n            return this.props.children\n        } else {\n            return null\n        }\n    }\n}\n","// This component is modeled after the one Forrest Walker demonstrated in his\n// tutorial video series on YouTube (https://goo.gl/XrrXg9). Thanks, Forrest!\n\nimport React, {Component} from 'react'\nimport {withScriptjs, withGoogleMap,\n    GoogleMap, Marker, InfoWindow } from 'react-google-maps'\nimport ErrorBoundary from './ErrorBoundary'\n\n// Split input into comma-delimited array\nconst split = s => {\n    return (s.split(','))\n}\n\n// Google Maps Custom Theme JSON\n// courtesy of Google (https://mapstyle.withgoogle.com/)\nconst mapStyle = [\n{\n\t\"elementType\": \"geometry\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#1d2c4d\"\n\t\t}\n\t]\n}, {\n\t\"elementType\": \"labels.text.fill\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#8ec3b9\"\n\t\t}\n\t]\n}, {\n\t\"elementType\": \"labels.text.stroke\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#1a3646\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"administrative.country\",\n\t\"elementType\": \"geometry.stroke\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#4b6878\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"administrative.land_parcel\",\n\t\"elementType\": \"labels.text.fill\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#64779e\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"administrative.province\",\n\t\"elementType\": \"geometry.stroke\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#4b6878\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"landscape.man_made\",\n\t\"elementType\": \"geometry.stroke\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#334e87\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"landscape.natural\",\n\t\"elementType\": \"geometry\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#023e58\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"poi\",\n\t\"elementType\": \"geometry\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#283d6a\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"poi\",\n\t\"elementType\": \"labels.text\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"visibility\": \"off\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"poi\",\n\t\"elementType\": \"labels.text.fill\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#6f9ba5\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"poi\",\n\t\"elementType\": \"labels.text.stroke\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#1d2c4d\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"poi.business\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"visibility\": \"off\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"poi.park\",\n\t\"elementType\": \"geometry.fill\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#023e58\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"poi.park\",\n\t\"elementType\": \"labels.text.fill\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#3C7680\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"road\",\n\t\"elementType\": \"geometry\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#304a7d\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"road\",\n\t\"elementType\": \"labels.icon\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"visibility\": \"off\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"road\",\n\t\"elementType\": \"labels.text.fill\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#98a5be\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"road\",\n\t\"elementType\": \"labels.text.stroke\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#1d2c4d\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"road.highway\",\n\t\"elementType\": \"geometry\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#2c6675\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"road.highway\",\n\t\"elementType\": \"geometry.stroke\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#255763\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"road.highway\",\n\t\"elementType\": \"labels.text.fill\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#b0d5ce\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"road.highway\",\n\t\"elementType\": \"labels.text.stroke\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#023e58\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"transit\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"visibility\": \"off\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"transit\",\n\t\"elementType\": \"labels.text.fill\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#98a5be\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"transit\",\n\t\"elementType\": \"labels.text.stroke\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#1d2c4d\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"transit.line\",\n\t\"elementType\": \"geometry.fill\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#283d6a\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"transit.station\",\n\t\"elementType\": \"geometry\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#3a4762\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"water\",\n\t\"elementType\": \"geometry\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#0e1626\"\n\t\t}\n\t]\n}, {\n\t\"featureType\": \"water\",\n\t\"elementType\": \"labels.text.fill\",\n\t\"stylers\": [\n\t\t{\n\t\t\t\"color\": \"#4e6d70\"\n\t\t}\n\t]\n}]\n\nconst MyMapComponent = withScriptjs(\n    withGoogleMap(props => (\n        <GoogleMap\n            // a few custom UI options to enhance the UX\n            options={{\n                styles: mapStyle,\n                scrollwheel: false,\n                mapTypeControl: false,\n                fullscreenControl: false,\n                streetViewControl: false,\n                backgroundColor: 'rgb(39, 48, 78)',\n            }}\n            // when user clicks anywhere on the map other than\n            // a marker, fire the handleMapClick function from App\n            onClick={props.handleMapClick}\n            defaultZoom={11}\n            zoom={props.zoom}\n            defaultCenter={props.center}\n            center={props.center}\n        >\n        {props.markers &&\n            props.markers\n                // map over all the markers, filtering for\n                // those flagged as visible.\n                .filter(marker => marker.isVisible)\n                .map((marker, index) => (\n\n                // Render the markers that are visible\n                <Marker\n                    key={index} {...props}\n                    // set each marker's position to its latlng coordinates\n                    position={{ lat: marker.lat, lng: marker.lng }}\n                    // when user clicks a marker, fire the\n                    // handleMarkerClick function from App\n                    onClick={() => props.handleMarkerClick(marker)}\n                    // Set animation style: The currently selected marker\n                    // gets the bounce animation(1), and all others get\n                    // the drop animation(2).\n                    animation={marker.id === props.selected.id ? 1 : 2}\n                >\n\n                    {marker.isOpen && (\n                        // If a marker is flagged as open, it should display\n                        // its InfoWindow, containing additional information\n                        // about the job listing.\n                        <InfoWindow id='info-window'>\n                            <div>\n                                <img id='info-window-img'\n                                    src={props.selected.photo}\n                                    alt={props.selected.company}\n                                />\n                                <h2>{props.selected.position}</h2>\n                                <h3>\n                                    {/* use split() to break job address into\n                                    a comma-delimited array, then display\n                                    street address on first line, followed by\n                                    city, state, and zip on second line */}\n                                    {split(props.selected.address)[0]}\n                                    <br/>\n                                    {split(props.selected.address)[1]},\n                                    {split(props.selected.address)[2]}\n                                </h3>\n                                <h3>{props.selected.phone}</h3>\n                                <h3>\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href={props.selected.website}\n                                    >\n                                        Website\n                                    </a>\n                                </h3>\n                            </div>\n                        </InfoWindow>\n                    )}\n                </Marker>\n            ))}\n        </GoogleMap>\n    ))\n)\n\n\n\n// The Map Class Component\nexport default class Map extends Component {\n\n    render() {\n\n        // If Google Maps API fails to authenticate,\n        window.gm_authFailure = () => {\n            this.props.handleError(`\n                Google Maps API failed to authenticate.\n                Please ensure that your API key and/or client ID are correct.\n                `)\n        }\n\n        return (\n            <ErrorBoundary {...this.props}>\n                <MyMapComponent\n                    {...this.props}\n                    isMarkerShown\n                    loadingElement={<div style={{ height: `100%` }} />}\n                    containerElement={<div\n                        style={{ height: `calc(100vh - calc(18px + 5vmin))` }}\n                    />}\n                    mapElement={<div style={{ height: `100%`}} />}\n                />\n            </ErrorBoundary>\n        )\n    }\n}\n","// This component is based on the ResponsiveDrawer demo code at:\n// https://material-ui.com/demos/drawers/#responsive-drawer\n\n// Import Remote Deps & Components\nimport React, {Component} from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport AppBar from '@material-ui/core/AppBar'\nimport Hidden from '@material-ui/core/Hidden'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Divider from '@material-ui/core/Divider'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport {withStyles} from '@material-ui/core/styles'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\n\n// Import Local Sub-Components\nimport Filter from './Filter'\nimport List from './List'\nimport Map from './Map'\n\n// set drawer width\nconst drawerWidth = 'calc(5vw + 240px)'\n\n// set theme values\nconst styles = theme => ({\n\n    root: {\n        flexGrow: 1,\n        height: '100vh',\n        zIndex: 1,\n        overflow: 'hidden',\n        position: 'relative',\n        display: 'flex',\n        width: '100%',\n    },\n    appBar: {\n        color: 'rgb(149, 184, 175)',\n        backgroundColor: 'rgb(21, 28, 42)',\n        position: 'absolute',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('md')]: {\n            width: `calc(100vw - ${drawerWidth})`,\n        },\n    },\n    navIconHide: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n\n    drawerPaper: {\n        backgroundColor: 'rgba(0, 0, 0, 0)',\n        width: drawerWidth,\n        [theme.breakpoints.up('md')]: {\n            position: 'relative',\n        },\n    },\n    content: {\n        flexGrow: 1,\n        //backgroundColor: theme.palette.background.default,\n        backgroundColor: 'rgba(39, 48, 78, 1)',\n        padding: theme.spacing.unit * 0,\n        position: 'relative'\n    },\n    title: {\n        display: 'inline',\n        textAlign: 'center',\n\n    }\n})\n\n// ResponsiveDrawer Class Component\nclass ResponsiveDrawer extends Component {\n    constructor() {\n        super()\n        this.state = {\n            mobileOpen: false,\n        }\n    }\n\n    // handler function for when the drawer is toggled, either by\n    // the user directly (menu button), or by the screen size changing.\n    handleDrawerToggle = () => {\n        this.setState(state => ({mobileOpen: !state.mobileOpen}))\n    }\n\n    render() {\n        const {classes, theme} = this.props\n\n        // set up the contents that will be in the drawer/sidebar\n        const drawer = (\n            <div>\n                <div\n                    // override the default theme\n                    className={classes.toolbar}\n                    style={{\n                        backgroundColor: 'rgb(149, 184, 175)',\n                        color: 'rgb(21, 28, 42)',\n                        borderRadius: '15px',\n                        width: '95%',\n                        margin: '8px 0 -5px 8px',\n                    }}\n                >\n                    <Filter // pass props down to children\n                        {...this.props}\n                    />\n                </div>\n                <Divider />\n                <br />\n                <List {...this.props} // pass props down to children\n                />\n            </div>\n        )\n\n        return (\n            <div className={classes.root}>\n                {/* AppBar is the dark bar across the top of the screen\n                    where the page title and menu button can be found */}\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerToggle}\n                            className={classes.navIconHide}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography className={classes.title}\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            noWrap\n                            align=\"center\"\n                        >\n                            Dev Moines\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\n                {/* This version of the drawer is for smaller screens. It\n                    will load hidden, and the user can open it with the menu\n                    button on the far left side of the App bar.  */}\n                <Hidden mdUp>\n                    <SwipeableDrawer\n                        minFlingVelocity={350}\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={this.state.mobileOpen}\n                        onOpen={this.handleDrawerToggle}\n                        onClose={this.handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </SwipeableDrawer>\n                </Hidden>\n\n                {/* This verison of the drawer only appears when the user's\n                screen size is wide enough to accommodate it. Only one\n                drawer instance can appear at any given time, so the UX\n                is pretty seamless. */}\n                <Hidden smDown implementation=\"css\">\n                    <Drawer\n                        style={{\n                            height: '100vh',\n                            overflow: 'auto',\n                            backgroundColor: 'rgb(21, 28, 42)'\n                        }}\n                        variant=\"permanent\"\n                        open\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n\n                {/* Finally, we render the map component, enclosed in a\n                    couple of style inheritance divs  */}\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Map \n                        // of course, it will need access to App's props.\n                        {...this.props}\n                    />\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(ResponsiveDrawer)\n","/*============================================================================\\\n| Dev Moines --- React-Based Job Search App for Devs & IT Pros in Des Moines  |\n|-----------------------------------------------------------------------------|\n| Acknowledgments:                                                            |\n|                                                                             |\n| Elharony for publishing the super-helpful video series on YouTube called    |\n| \"Udacity | Neighborhood Map\". Thanks for making a complex task so simple!   |\n| Reference: https://goo.gl/gA7U2E                                            |\n|                                                                             |\n| Forrest Walker on YouTube (https://goo.gl/XrrXg9) for the comprehensive     |\n| walkthrough video series on P7. I finally learned how state & props work!   |\n|                                                                             |\n| Rodrick Bloomfield @GitHub (https://github.com/bloom305) for demonstrating  |\n| many different ways to approach this project. Finding the commonalities     |\n| between them made it a LOT easier to grasp how everything fits together.    |\n\\___________________________________________________________________________*/\n\n\n/*============================ <Dependencies> ===============================\\\n\\---------------------------------------------------------------------------*/\n\n// External Theme & UI Libraries\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles'\nimport ResponsiveDrawer from './components/ResponsiveDrawer'\n\n// APIs\nimport * as gMapsAPI from './APIs/GoogleMapsAPI'\nimport * as myJsonAPI from './APIs/MyJsonAPI'\n\n// 3rd Party JS Libraries\nimport {ToastContainer, toast} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport axios from 'axios'\n\n// Basic React Deps\nimport './App.css'\nimport React, {Component} from 'react'\n\n/*---------------------------------------------------------------------------\\\n\\============================== </Dependencies> ============================*/\n\n\n/*================================== <App> ==================================\\\n\\---------------------------------------------------------------------------*/\n\n// set up easy access to the APIs used in this app\nconst APIs = {\n\n    // Google Maps\n    gMaps: {\n        // using the `params` attribute allows us to string multiple query\n        // parameters together later on without manual concatenation\n        params: new URLSearchParams({\n            /* To use your own API key, uncomment the line below this one... */\n            // key: `${gMapsAPI.key}`,\n\n            /* ...then comment out the line below this one...*/\n            client: `${gMapsAPI.client}`,\n\n            /* ...then open APIs/GoogleMapsApi.js & follow its instructions. */\n        })\n    },\n\n    // MyJSON.com\n    myJson: {\n        id:`${myJsonAPI.id}`,\n        url:`${myJsonAPI.url}`\n    }\n}\n\n// Preemptively silence some annoying syntax deprecation warning messages\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n        suppressDeprecationWarnings: true\n    }\n})\n\n// App Component\nexport default class App extends Component {\n    constructor() {\n        super()\n        // Initialize state for the app\n        this.state = {\n            jobs: [],\n            filterInput: '',\n            markers: [],\n            center: {\n                lat: gMapsAPI.center.lat,\n                lng: gMapsAPI.center.lng\n            },\n            zoom: 11,\n            googleMapURL: `${gMapsAPI.url}${APIs.gMaps.params}`,\n            selected: {\n                id: '',\n                company: '',\n                position: '',\n                photo: '',\n                address:'',\n                phone: '',\n                website: ''\n            },\n            error: '',\n            online: true,\n            cached: false\n        }\n    }\n\n\n    handleError = (error, info) => {\n        this.setState({error})\n        const errorString = error.toString()\n        console.error(errorString)\n        toast.error(\n            <div style={{color: 'black'}}>\n                <div style={{fontWeight: 'bold'}}>\n                    <span role=\"img\" aria-label=\"error\">‼ -- </span>\n                    API Error\n                    <span role=\"img\" aria-label=\"error\"> -- ‼</span><br />\n                </div>\n                {info}\n            </div>\n        )\n    }\n\n    handleOffline = () => {\n        if(this.state.online) {\n            this.setState({online: false})\n            toast.warning(\n                <div style={{color: 'black', fontWeight: 'bold'}}>\n                    <span role=\"img\" aria-label=\"offline\">⦸ </span>\n                    You are currently offline.\n                    <span role=\"img\" aria-label=\"offline\"> ⦸</span><br />\n                    App running from local cache.\n                </div>\n            )\n        }\n    }\n\n    handleOnline = () => {\n        if(!this.state.online) {\n            this.setState({online: true})\n            toast.success(\n                <div style={{color: 'black', fontWeight: 'bold'}}>\n                    <span role=\"img\" aria-label=\"online\"> </span>\n                    You are back online!\n                    <span role=\"img\" aria-label=\"online\"> </span>\n                </div>\n            )\n        }\n    }\n\n\n    handleCached = () => {\n        if(!this.state.cached) {\n            this.setState({cached: true})\n            toast.info(\n                <div style={{color: 'black', fontWeight: 'bold'}}>\n                    <span role=\"img\" aria-label=\"check\">✓ </span>\n                    App successfully cached!\n                    <span role=\"img\" aria-label=\"check\"> ✓</span><br />\n                    <span role=\"img\" aria-label=\"globe-western-hemisphere\">🌎 </span>\n                     Offline mode now available.\n                    <span role=\"img\" aria-label=\"globe-eastern-hemisphere\"> 🌍</span>\n                </div>\n            )\n        }\n    }\n\n    // Function to close all currently-open markers on the map\n    closeAllMarkers = () => {\n        // map through all of the markers in state and set as `markers`\n        const markers = this.state.markers.map(marker => {\n            // on each marker, change its `isOpen` to false\n            marker.isOpen = false\n            // then return it\n            return marker\n        })\n        // Once all markers have been closed, update the state to match.\n        this.setState({markers: Object.assign(this.state.markers, markers)})\n    }\n\n    // Function to handle when user clicks on a map marker.\n    handleMarkerClick = marker => {\n\n        // First, close any remaining open markers\n        this.closeAllMarkers()\n\n        // set the current marker's `isOpen` to true\n        marker.isOpen = true\n\n        // create `selected` variable and set it to the job object whose\n        // id value matches that of the clicked marker\n        const selected = this.state.jobs[marker.id]\n\n        // update state of markers, selected, and center\n        this.setState({\n            markers: Object.assign(this.state.markers, marker),\n            selected: Object.assign(selected),\n            center: Object.assign({\n                // Tell the map to center itself just a hair to the North\n                // of the marker's actual coordinates, to ensure enough\n                // screen space is left for the InfoWindow to display\n                lat: (selected.latlng[0] + 0.0055),\n                lng: selected.latlng[1]\n            })})\n        setTimeout(() => {\n            this.setState({zoom: 15})\n        },1)\n\n    }\n\n    // function to handle when a user clicks anywhere on the map\n    // other than a marker\n    handleMapClick = () => {\n        // close any markers that are still open\n        this.closeAllMarkers()\n        // return state back to \"nothing selected\"\n        this.setState({\n            center: gMapsAPI.center,\n            zoom: 11,\n            selected: {id: ''}\n        })\n    }\n\n    // Helper function for pulling state updates up from\n    // child components, so that the updated state may be\n    // used to update other components.\n    liftState = (o) => {\n        this.setState(o)\n    }\n\n    // Fire this event when the App mounts successfully\n    componentDidMount() {\n        // Use axios to get json data from MyJsonAPI\n        axios(`${APIs.myJson.url}${APIs.myJson.id}`)\n        // then feed the results into jobs variable\n        .then(res => {\n            const jobs = res.data.jobs\n            const center = gMapsAPI.center\n            // create complete list of map markers from json data\n            const markers = jobs.map(job => {\n                return {\n                    lat: job.latlng[0],\n                    lng: job.latlng[1],\n                    isOpen: false,\n                    isVisible: true,\n                    id: job.id\n                }\n            })\n            // set the App state to reflect all of\n            // this freshly acquired data\n            this.setState({jobs,markers,center})\n        })\n\n        // If an error occurred, collect the error message(s)\n        .catch(error => {\n            // and pass them to handleError()\n            this.handleError(error)\n        })\n\n        // Set up event listeners for both online and offline states\n        // and set each to trigger its respective handler function\n        window.addEventListener('offline', () => {\n            this.handleOffline()\n        }, false)\n        window.addEventListener('online', () => {\n            this.handleOnline()\n        }, false)\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                {/* Render the ResponsiveDrawer component inside of\n                    a MuiThemeProvider component. Pass App state, handleX, and\n                    liftState functions down as props to children components */}\n                <MuiThemeProvider theme={theme}>\n                    <ResponsiveDrawer\n                        {...this.state}\n                        handleFilterChange={this.handleFilterChange}\n                        handleMarkerClick={this.handleMarkerClick}\n                        // closeAllMarkers={this.closeAllMarkers}\n                        handleMapClick={this.handleMapClick}\n                        liftState={this.liftState}\n                        handleError={this.handleError}\n                    />\n                </MuiThemeProvider>\n\n                {/* Render the ToastContainer to display errors and other\n                    messages as graphical UI components rather than console  */}\n                <ToastContainer\n                    position='bottom-center'\n                />\n            </div>\n        )\n    }\n}\n\n/*---------------------------------------------------------------------------\\\n\\================================== </App> =================================*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}